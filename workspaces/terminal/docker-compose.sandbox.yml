services:
  # Terminal UI service (existing)
  terminal:
    image: node:20-alpine
    container_name: terminal
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      
      # Main router for UI
      - traefik.http.routers.terminal.rule=Host(`${DOMAIN}`) && PathPrefix(`/terminal`)
      - traefik.http.routers.terminal.entrypoints=websecure
      - traefik.http.routers.terminal.tls=true
      - traefik.http.routers.terminal.tls.certresolver=letsencrypt
      - traefik.http.routers.terminal.priority=10
      - traefik.http.services.terminal.loadbalancer.server.port=5173
      
      # Trailing slash redirect
      - traefik.http.middlewares.terminal-redirect.redirectregex.regex=^https?://([^/]+)/terminal$$
      - traefik.http.middlewares.terminal-redirect.redirectregex.replacement=https://$$1/terminal/
      - traefik.http.routers.terminal.middlewares=terminal-redirect

  # Terminal sandbox service with ttyd
  terminal-sandbox:
    build: .
    container_name: terminal-sandbox
    hostname: cloudyknight-sandbox
    volumes:
      # Mount all workspaces read-write
      - /home/claude/cloudyknight/workspaces:/workspaces:rw
      # Mount specific workspace based on selection (will be overridden at runtime)
      - ${WORKSPACE_PATH:-/home/claude/cloudyknight/workspaces/terminal}:/workspace:rw
    environment:
      - WORKSPACE_NAME=${WORKSPACE_NAME:-terminal}
      - TERM=xterm-256color
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      
      # WebSocket router for ttyd
      - traefik.http.routers.terminal-ws.rule=Host(`${DOMAIN}`) && PathPrefix(`/terminal/ws`)
      - traefik.http.routers.terminal-ws.entrypoints=websecure
      - traefik.http.routers.terminal-ws.tls=true
      - traefik.http.routers.terminal-ws.tls.certresolver=letsencrypt
      - traefik.http.routers.terminal-ws.priority=15
      - traefik.http.services.terminal-ws.loadbalancer.server.port=7681
      
      # Strip prefix middleware for WebSocket
      - traefik.http.middlewares.terminal-ws-strip.stripprefix.prefixes=/terminal/ws
      - traefik.http.routers.terminal-ws.middlewares=terminal-ws-strip

networks:
  traefik-network:
    external: true