services:
  # WWW - serves workspace listing with hot reloading via Vite
  www:
    image: node:20-alpine
    container_name: www
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules  # Anonymous volume for node_modules
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      
      # WWW router - lower priority, catches everything except specific paths
      - traefik.http.routers.www.rule=Host(`${DOMAIN:-workspaces.etdofresh.com}`)
      - traefik.http.routers.www.entrypoints=websecure
      - traefik.http.routers.www.tls=true
      - traefik.http.routers.www.tls.certresolver=letsencrypt
      - traefik.http.routers.www.priority=1
      - traefik.http.services.www.loadbalancer.server.port=5173
      
      # Redirect /www to root
      - traefik.http.routers.www-redirect.rule=Host(`${DOMAIN:-workspaces.etdofresh.com}`) && (Path(`/www`) || PathPrefix(`/www/`))
      - traefik.http.routers.www-redirect.entrypoints=websecure
      - traefik.http.routers.www-redirect.tls=true
      - traefik.http.routers.www-redirect.tls.certresolver=letsencrypt
      - traefik.http.routers.www-redirect.priority=20
      - traefik.http.middlewares.www-to-root.redirectregex.regex=^https?://([^/]+)/www/?(.*)$$
      - traefik.http.middlewares.www-to-root.redirectregex.replacement=https://$$1/$$2
      - traefik.http.middlewares.www-to-root.redirectregex.permanent=true
      - traefik.http.routers.www-redirect.middlewares=www-to-root

networks:
  traefik-network:
    external: true