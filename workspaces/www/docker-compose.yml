version: '3.8'
services:
  www:
    container_name: workspace-www
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      - traefik.http.routers.workspace-www.rule=Host(`etdofresh-dev.duckdns.org`) && (Path(`/`) || PathRegexp(`^/[^/]+\\.[^/]+$$`))
      - traefik.http.routers.workspace-www.entrypoints=web
      - traefik.http.routers.workspace-www-secure.rule=Host(`etdofresh-dev.duckdns.org`) && (Path(`/`) || PathRegexp(`^/[^/]+\\.[^/]+$$`))
      - traefik.http.routers.workspace-www-secure.entrypoints=websecure
      - traefik.http.routers.workspace-www-secure.tls=true
      - traefik.http.routers.workspace-www-secure.tls.certresolver=letsencrypt
      - traefik.http.services.workspace-www.loadbalancer.server.port=3000
    image: node:20-alpine
    working_dir: /app
    volumes:
      - /home/claude/cloudyknight/workspaces/www/public:/app/public:ro
      - /home/claude/cloudyknight/workspaces/www/package.json:/app/package.json:ro
    command: sh -c "npm install -g http-server && http-server public -p 3000 --cors -c-1"
    environment:
      NODE_ENV: production
      PORT: 3000
networks:
  traefik-network:
    external: true
