version: '3.8'

services:
  # MinIO for S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: workspace-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    networks:
      - traefik-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RClone mount - Better performance than s3fs
  rclone-mount:
    image: rclone/rclone:latest
    container_name: workspace-rclone
    privileged: true
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      # RClone configuration via environment
      RCLONE_CONFIG_MINIO_TYPE: s3
      RCLONE_CONFIG_MINIO_PROVIDER: Minio
      RCLONE_CONFIG_MINIO_ACCESS_KEY_ID: ${MINIO_ROOT_USER:-minioadmin}
      RCLONE_CONFIG_MINIO_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      RCLONE_CONFIG_MINIO_ENDPOINT: http://minio:9000
      RCLONE_CONFIG_MINIO_ENV_AUTH: "false"
    command: |
      mount minio:workspaces /mnt/workspaces
      --vfs-cache-mode full
      --vfs-cache-max-size 1G
      --vfs-cache-max-age 1h
      --vfs-write-back 5s
      --allow-other
      --allow-non-empty
      --dir-cache-time 5m
      --poll-interval 30s
      --umask 002
      --log-level INFO
    volumes:
      - workspaces_mount:/mnt/workspaces:rshared
      - rclone_cache:/root/.cache/rclone
    networks:
      - traefik-network
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped

  # Sync service - uploads local workspaces to S3 with filtering
  workspace-sync:
    build:
      context: .
      dockerfile: Dockerfile.sync
    container_name: workspace-sync
    environment:
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: workspaces
      S3_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      SYNC_INTERVAL: 60
    volumes:
      # Mount local workspaces directory for syncing
      - ./workspaces:/local/workspaces:ro
      - sync_state:/var/lib/sync
    networks:
      - traefik-network
    depends_on:
      - minio
    restart: unless-stopped

  # Modified monitor using rclone mount
  monitor:
    container_name: workspace-monitor
    build:
      context: ./workspaces/monitor
      dockerfile: Dockerfile
    networks:
      - traefik-network
    volumes:
      # Use the rclone mounted volume
      - workspaces_mount:/workspaces:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # Store generated docker-compose files locally
      - ./generated-composes:/generated
    environment:
      WORKSPACE_PATH: /workspaces
      DOMAIN: ${DOMAIN:-etdofresh-dev.duckdns.org}
      NETWORK: traefik-network
      SCAN_INTERVAL: 30000
      PORT: 4000
      COMPOSE_OUTPUT_PATH: /generated
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      - traefik.http.routers.workspace-monitor.rule=Host(`${DOMAIN}`) && PathPrefix(`/monitor`)
      - traefik.http.routers.workspace-monitor.entrypoints=websecure
      - traefik.http.routers.workspace-monitor.tls=true
      - traefik.http.routers.workspace-monitor.tls.certresolver=letsencrypt
      - traefik.http.services.workspace-monitor.loadbalancer.server.port=4000
    depends_on:
      - rclone-mount
    restart: unless-stopped

volumes:
  minio_data:
    driver: local
  workspaces_mount:
    driver: local
  rclone_cache:
    driver: local
  sync_state:
    driver: local

networks:
  traefik-network:
    external: true