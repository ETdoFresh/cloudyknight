services:
  # Admin - workspace management interface at /admin
  admin:
    image: nginx:alpine
    container_name: admin
    volumes:
      - ./public:/usr/share/nginx/html:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro  # For Docker management
    networks:
      - traefik-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-network
      
      # HTTP router for /admin path
      - traefik.http.routers.admin.rule=Host(`${DOMAIN:-workspaces.etdofresh.com}`) && PathPrefix(`/admin`)
      - traefik.http.routers.admin.entrypoints=web
      - traefik.http.routers.admin.priority=10
      - traefik.http.routers.admin.middlewares=admin-stripprefix
      
      # HTTPS router for /admin path
      - traefik.http.routers.admin-secure.rule=Host(`${DOMAIN:-workspaces.etdofresh.com}`) && PathPrefix(`/admin`)
      - traefik.http.routers.admin-secure.entrypoints=websecure
      - traefik.http.routers.admin-secure.tls=true
      - traefik.http.routers.admin-secure.tls.certresolver=letsencrypt
      - traefik.http.routers.admin-secure.priority=10
      - traefik.http.routers.admin-secure.middlewares=admin-stripprefix
      
      # Strip /admin prefix so nginx serves from root
      - traefik.http.middlewares.admin-stripprefix.stripprefix.prefixes=/admin
      
      # Service configuration
      - traefik.http.services.admin.loadbalancer.server.port=80

networks:
  traefik-network:
    external: true